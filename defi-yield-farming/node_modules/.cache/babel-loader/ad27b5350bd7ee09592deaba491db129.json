{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/src/components/App.js\";\n/// This is the main file\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Main from './Main.js';\nimport NavBar from './Navbar.js';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DB from '../truffle_abis/DecentralBank.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    // call loadWeb3 function before anoything else \"Way to conncet your wallet to app\"\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                // make a new instance of web3, wait and enable it\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('404! Check our MetaMask!!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, dbData, db, dbBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                // Load Tether TOKEN\n                tetherData = Tether.networks[networkId];\n                console.log(tetherData);\n\n                if (!tetherData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 16;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                }); //console.log(\"Current balance in Wei\",tetherBalance)\n\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert(\"tether contract not deployed!\");\n\n              case 21:\n                // Load RWD contract\n                rwdData = RWD.networks[networkId];\n                console.log(rwdData);\n\n                if (!rwdData) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 28;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 28:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                }); //console.log('Current rwd balance:', rwdBalance)\n\n                _context3.next = 33;\n                break;\n\n              case 32:\n                window.alert('Reward Token contract not deployed!');\n\n              case 33:\n                // load Decentral bank contract\n                dbData = DB.networks[networkId];\n\n                if (!dbData) {\n                  _context3.next = 43;\n                  break;\n                }\n\n                db = new web3.eth.Contract(DB.abi, dbData.address);\n                this.setState({\n                  db: db\n                });\n                _context3.next = 39;\n                return db.methods.stakingBalance(this.state.account).call();\n\n              case 39:\n                dbBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: dbBalance.toString()\n                }); //console.log('Current staking balance',dbBalance)\n\n                _context3.next = 44;\n                break;\n\n              case 43:\n                window.alert('DB contract not deployed!');\n\n              case 44:\n                // set this loading to false, if all contracts are deployed!\n                this.setState({\n                  loading: false\n                }); //console.log(\"All contracts are deployed!\")\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } // React code goes here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: '30px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }\n        }, \"Connect your MetaMask wallet, Please.\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          rwdBalance: this.state.rwdBalance,\n          stakingBalance: this.state.stakingBalance,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 63\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pyrypajunen/Documents/GitHub/distributed-systems-project/defi-yield-farming/src/components/App.js"],"names":["React","Component","Web3","Main","NavBar","Tether","RWD","DB","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rwdData","rwd","rwdBalance","dbData","db","stakingBalance","dbBalance","loading","props","decentralBank","content","margin","maxWidth","minHeight"],"mappings":";;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,EAAP,MAAe,oCAAf;;IAGMC,G;;;;;AAEF;;;;;;;;uBAEU,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAIFC,MAAM,CAACC,Q;;;;;AACP;AACAD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIX,IAAJ,CAASS,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACH,oBAAGH,MAAM,CAACE,IAAV,EAAgB;AACnBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIX,IAAJ,CAASS,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACH,iBAFM,MAEA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,2BAAb;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACGA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,qBAAKG,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAlB,iBAAd;;uBACwBN,IAAI,CAACI,GAAL,CAASO,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AAEN;AACMC,gBAAAA,U,GAAatB,MAAM,CAACuB,QAAP,CAAgBF,SAAhB,C;AACnBN,gBAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;;qBACGA,U;;;;;AACKE,gBAAAA,M,GAAS,IAAIhB,IAAI,CAACI,GAAL,CAASa,QAAb,CAAsBzB,MAAM,CAAC0B,GAA7B,EAAkCJ,UAAU,CAACK,OAA7C,C;AACf,qBAAKV,QAAL,CAAc;AAACO,kBAAAA,MAAM,EAANA;AAAD,iBAAd;;uBAC0BA,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyB,KAAKC,KAAL,CAAWZ,OAApC,EAA6Ca,IAA7C,E;;;AAAtBC,gBAAAA,a;AACJ,qBAAKf,QAAL,CAAc;AAAEe,kBAAAA,aAAa,EAAEA,aAAa,CAACC,QAAd;AAAjB,iBAAd,E,CACA;;;;;;AAEA3B,gBAAAA,MAAM,CAACK,KAAP,CAAa,+BAAb;;;AAGF;AACMuB,gBAAAA,O,GAAUjC,GAAG,CAACsB,QAAJ,CAAaF,SAAb,C;AAChBN,gBAAAA,OAAO,CAACC,GAAR,CAAYkB,OAAZ;;qBACIA,O;;;;;AACMC,gBAAAA,G,GAAM,IAAI3B,IAAI,CAACI,GAAL,CAASa,QAAb,CAAsBxB,GAAG,CAACyB,GAA1B,EAA+BQ,OAAO,CAACP,OAAvC,C;AACZ,qBAAKV,QAAL,CAAc;AAACkB,kBAAAA,GAAG,EAAHA;AAAD,iBAAd;;uBACuBA,GAAG,CAACP,OAAJ,CAAYC,SAAZ,CAAsB,KAAKC,KAAL,CAAWZ,OAAjC,EAA0Ca,IAA1C,E;;;AAAnBK,gBAAAA,U;AACJ,qBAAKnB,QAAL,CAAc;AAAEmB,kBAAAA,UAAU,EAAEA,UAAU,CAACH,QAAX;AAAd,iBAAd,E,CACA;;;;;;AAEA3B,gBAAAA,MAAM,CAACK,KAAP,CAAa,qCAAb;;;AAGJ;AACM0B,gBAAAA,M,GAASnC,EAAE,CAACqB,QAAH,CAAYF,SAAZ,C;;qBACXgB,M;;;;;AACMC,gBAAAA,E,GAAK,IAAI9B,IAAI,CAACI,GAAL,CAASa,QAAb,CAAsBvB,EAAE,CAACwB,GAAzB,EAA8BW,MAAM,CAACV,OAArC,C;AACX,qBAAKV,QAAL,CAAc;AAACqB,kBAAAA,EAAE,EAAFA;AAAD,iBAAd;;uBACsBA,EAAE,CAACV,OAAH,CAAWW,cAAX,CAA0B,KAAKT,KAAL,CAAWZ,OAArC,EAA8Ca,IAA9C,E;;;AAAlBS,gBAAAA,S;AACJ,qBAAKvB,QAAL,CAAc;AAACsB,kBAAAA,cAAc,EAAEC,SAAS,CAACP,QAAV;AAAjB,iBAAd,E,CACA;;;;;;AAEA3B,gBAAAA,MAAM,CAACK,KAAP,CAAa,2BAAb;;;AAGJ;AACA,qBAAKM,QAAL,CAAc;AAACwB,kBAAAA,OAAO,EAAE;AAAV,iBAAd,E,CACD;;;;;;;;;;;;;;;;;;AAIH,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKZ,KAAL,GAAa;AACTZ,MAAAA,OAAO,EAAE,KADA;AAETM,MAAAA,MAAM,EAAE,EAFC;AAGTW,MAAAA,GAAG,EAAE,EAHI;AAITQ,MAAAA,aAAa,EAAE,EAJN;AAKTX,MAAAA,aAAa,EAAE,GALN;AAMTI,MAAAA,UAAU,EAAE,GANH;AAOTG,MAAAA,cAAc,EAAE,GAPP;AAQTE,MAAAA,OAAO,EAAE;AARA,KAAb;AAFe;AAalB,G,CAED;;;;;6BACS;AACL,UAAIG,OAAJ;AACA;AAAC,aAAKd,KAAL,CAAWW,OAAX,GAAqBG,OAAO,gBAC7B;AAAG,UAAA,EAAE,EAAC,QAAN;AAAe,UAAA,SAAS,EAAC,aAAzB;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADC,GAE2CD,OAAO,gBAAG,oBAAC,IAAD;AACtD,UAAA,aAAa,EAAI,KAAKd,KAAL,CAAWE,aAD0B;AAEtD,UAAA,UAAU,EAAI,KAAKF,KAAL,CAAWM,UAF6B;AAGtD,UAAA,cAAc,EAAI,KAAKN,KAAL,CAAWS,cAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFrD;AAK8C;AAC/C,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAI,KAAKT,KAAL,CAAWZ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEQ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,IAAI,EAAE,MAAZ;AAAmB,QAAA,SAAS,EAAC,2BAA7B;AAAyD,QAAA,KAAK,EAAE;AAAC4B,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,OADL,CADJ,CADJ,CADJ,CAFR,CADJ;AAcH;;;;EA9GahD,S;;AAiHlB,eAAeO,GAAf","sourcesContent":["/// This is the main file\n\nimport React, {Component} from 'react'\nimport Web3 from 'web3'\nimport './App.css'\nimport Main from'./Main.js'\nimport NavBar from './Navbar.js'\nimport Tether from '../truffle_abis/Tether.json'\nimport RWD from '../truffle_abis/RWD.json'\nimport DB from '../truffle_abis/DecentralBank.json'\n\n\nclass App extends Component {\n\n    // call loadWeb3 function before anoything else \"Way to conncet your wallet to app\"\n    async UNSAFE_componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData() // reads crypto wallet account\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            // make a new instance of web3, wait and enable it\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if(window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('404! Check our MetaMask!!')\n\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({account: accounts[0]})\n        const networkId = await web3.eth.net.getId()\n    \n        // Load Tether TOKEN\n        const tetherData = Tether.networks[networkId]\n        console.log(tetherData)\n        if(tetherData) {\n          const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n          this.setState({tether})\n          let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n          this.setState({ tetherBalance: tetherBalance.toString()})\n          //console.log(\"Current balance in Wei\",tetherBalance)\n        } else {\n          window.alert(\"tether contract not deployed!\")\n        }\n\n        // Load RWD contract\n        const rwdData = RWD.networks[networkId]\n        console.log(rwdData)\n        if (rwdData) {\n            const rwd = new web3.eth.Contract(RWD.abi, rwdData.address)\n            this.setState({rwd})\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\n            this.setState({ rwdBalance: rwdBalance.toString()})\n            //console.log('Current rwd balance:', rwdBalance)\n        } else {\n            window.alert('Reward Token contract not deployed!')\n        }\n\n        // load Decentral bank contract\n        const dbData = DB.networks[networkId]\n        if (dbData) {\n            const db = new web3.eth.Contract(DB.abi, dbData.address)\n            this.setState({db})\n            let dbBalance = await db.methods.stakingBalance(this.state.account).call()\n            this.setState({stakingBalance: dbBalance.toString()})\n            //console.log('Current staking balance',dbBalance)\n        } else {\n            window.alert('DB contract not deployed!')\n        }\n\n        // set this loading to false, if all contracts are deployed!\n        this.setState({loading: false})\n       //console.log(\"All contracts are deployed!\")\n\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            tether: {},\n            rwd: {},\n            decentralBank: {},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true\n\n        }\n    }\n\n    // React code goes here\n    render() {\n        let content\n        {this.state.loading ? content =\n        <p id='loader' className='text-center' style={{margin: '30px'}}> \n        Connect your MetaMask wallet, Please.</p> : content = <Main \n        tetherBalance = {this.state.tetherBalance}\n        rwdBalance = {this.state.rwdBalance}\n        stakingBalance = {this.state.stakingBalance}/>}\n        return (\n            <div>\n                <NavBar account = {this.state.account}/>\n                    <div className='container-fluid mt-5' >\n                        <div className='row'>\n                            <main role= 'main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth: '600px', minHeight: '100vm'}}>\n                                <div>\n                                    {content}\n                                </div>\n                            </main>\n                        </div>\n                    </div>   \n            </div> \n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}